{
  "openapi": "3.0.0",
  "info": {
    "title": "Quark APIs",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "https://demo.quarklabs.ai/api/v1"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Root"
        ],
        "operationId": "QuarkRESTAPIRoot",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/context/extractors/schema": {
      "get": {
        "tags": [
          "JsonSchema"
        ],
        "operationId": "getExtractorSchema",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        }
      }
    },
    "/context/extractors": {
      "get": {
        "tags": [
          "Context"
        ],
        "operationId": "listExtractors",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Extractor"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Context"
        ],
        "operationId": "createExtractor",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/Extractor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Extractor"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/context/extractors/{id}": {
      "get": {
        "tags": [
          "Context"
        ],
        "operationId": "getExtractorDetails",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Extractor"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Context"
        ],
        "operationId": "deleteExtractor",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseMessage"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Context"
        ],
        "operationId": "updateExtractor",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/Extractor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Extractor"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/admin/identity/identity": {
      "get": {
        "tags": [
          "Identity"
        ],
        "operationId": "listIdentities",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Identity"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/admin/identity/identity/{id}": {
      "get": {
        "tags": [
          "Identity"
        ],
        "operationId": "getIdentityDetails",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Identity"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Identity"
        ],
        "operationId": "deleteIdentity",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseMessage"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Identity"
        ],
        "operationId": "updateIdentity",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/Identity"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Identity"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/admin/identity/roles": {
      "get": {
        "tags": [
          "Identity"
        ],
        "operationId": "listRoles",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdentityRoleAPIModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Identity"
        ],
        "operationId": "createRole",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityRoleAPIModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/admin/identity/roles/{id}": {
      "get": {
        "tags": [
          "Identity"
        ],
        "operationId": "getRoleDetails",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityRoleAPIModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Identity"
        ],
        "operationId": "deleteRole",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseMessage"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Identity"
        ],
        "operationId": "updateRole",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityRoleAPIModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/admin/identity/roles/{id}/members/identity/{identity_id}": {
      "put": {
        "tags": [
          "Identity"
        ],
        "operationId": "assignIdentityToRole",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          },
          {
            "in": "path",
            "name": "identity_id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityRoleAPIModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Identity"
        ],
        "operationId": "unassignIdentityFromRole",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          },
          {
            "in": "path",
            "name": "identity_id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityRoleAPIModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/admin/identity/roles/{id}/members/role/{role_id}": {
      "put": {
        "tags": [
          "Identity"
        ],
        "operationId": "assignRoleToRole",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          },
          {
            "in": "path",
            "name": "role_id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityRoleAPIModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Identity"
        ],
        "operationId": "unassignRoleFromRole",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          },
          {
            "in": "path",
            "name": "role_id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityRoleAPIModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/models/schema": {
      "get": {
        "tags": [
          "JsonSchema"
        ],
        "operationId": "getMLModelSchema",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        }
      }
    },
    "/models": {
      "get": {
        "tags": [
          "MLModels"
        ],
        "operationId": "listMLModel",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MlModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "MLModels"
        ],
        "operationId": "createMLModel",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/MlModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MlModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/models/{id}": {
      "get": {
        "tags": [
          "MLModels"
        ],
        "operationId": "getMLModelDetails",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MlModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "MLModels"
        ],
        "operationId": "deleteMLModel",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseMessage"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "MLModels"
        ],
        "operationId": "updateMLModel",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/MlModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MlModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/models/roles/schema": {
      "get": {
        "tags": [
          "JsonSchema"
        ],
        "operationId": "getMLModelRoleSchema",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        }
      }
    },
    "/models/roles": {
      "get": {
        "tags": [
          "MLModels"
        ],
        "operationId": "listMLModelRoles",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MlModelRole"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "MLModels"
        ],
        "operationId": "createMLModelRole",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/MlModelRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MlModelRole"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/models/roles/{id}": {
      "get": {
        "tags": [
          "MLModels"
        ],
        "operationId": "getMLModelRoleDetails",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MlModelRole"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "MLModels"
        ],
        "operationId": "deleteMLModelRole",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseMessage"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "MLModels"
        ],
        "operationId": "updateMLModelRole",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/MlModelRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/MlModelRole"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/authorize": {
      "get": {
        "tags": [
          "Identity"
        ],
        "operationId": "AuthorizeToken",
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "_state",
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "explode": true,
            "style": "form"
          }
        ],
        "responses": {
          "303": {
            "description": "",
            "headers": {
              "LOCATION": {
                "style": "simple",
                "required": true,
                "deprecated": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        }
      }
    },
    "/authorize/logout": {
      "get": {
        "tags": [
          "Identity"
        ],
        "operationId": "Logout",
        "responses": {
          "303": {
            "description": "",
            "headers": {
              "LOCATION": {
                "style": "simple",
                "required": true,
                "deprecated": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        }
      }
    },
    "/profile/api_keys/schema": {
      "get": {
        "tags": [
          "JsonSchema"
        ],
        "operationId": "getAPIKeySchema",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        }
      }
    },
    "/profile/api_keys": {
      "get": {
        "tags": [
          "Profile"
        ],
        "operationId": "listUserAPIKeys",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/APIKey"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Profile"
        ],
        "operationId": "createUserAPIKey",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/CreateAPIKeyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAPIKeyResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/profile/api_keys/{id}": {
      "delete": {
        "tags": [
          "Profile"
        ],
        "operationId": "deleteUserAPIKey",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseMessage"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/profile/api_keys/{id}/disable": {
      "patch": {
        "tags": [
          "Profile"
        ],
        "operationId": "disableUserAPIKey",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseMessage"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/sources/schema": {
      "get": {
        "tags": [
          "JsonSchema"
        ],
        "operationId": "getSourceSchema",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        }
      }
    },
    "/sources": {
      "get": {
        "tags": [
          "Sources"
        ],
        "operationId": "listSources",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Source"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Sources"
        ],
        "operationId": "createSource",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/Source"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Source"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/sources/{id}": {
      "get": {
        "tags": [
          "Sources"
        ],
        "operationId": "getSourceDetails",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Source"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Sources"
        ],
        "operationId": "deleteSource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseMessage"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Sources"
        ],
        "operationId": "updateSource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/Source"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Source"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "Identity"
        ],
        "operationId": "GetMyProfile",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Identity"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/context/classifiers/schema": {
      "get": {
        "tags": [
          "JsonSchema"
        ],
        "operationId": "getClassifierSchema",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        }
      }
    },
    "/context/classifiers": {
      "get": {
        "tags": [
          "Context"
        ],
        "operationId": "listClassifier",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Classifier"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Context"
        ],
        "operationId": "createClassifier",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/Classifier"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Classifier"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/context/classifiers/{id}": {
      "get": {
        "tags": [
          "Context"
        ],
        "operationId": "getClassifierDetails",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Classifier"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Context"
        ],
        "operationId": "deleteClassifier",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseMessage"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Context"
        ],
        "operationId": "updateClassifier",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/Classifier"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Classifier"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/json_schemas": {
      "get": {
        "tags": [
          "JsonSchema"
        ],
        "operationId": "listSchemas",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        }
      }
    },
    "/history": {
      "get": {
        "tags": [
          "History"
        ],
        "operationId": "QuarkGetAllHistory",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryContainerAPI"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/history/quarks": {
      "get": {
        "tags": [
          "History"
        ],
        "operationId": "QuarkGetAllQuarksHistory",
        "parameters": [
          {
            "in": "query",
            "name": "registry_identifier",
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "lattice_id",
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "min_timestamp",
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "max_timestamp",
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "explode": true,
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuarkHistoryItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/history/flows": {
      "get": {
        "tags": [
          "History"
        ],
        "operationId": "QuarkGetAllLatticeHistory",
        "parameters": [
          {
            "in": "query",
            "name": "registry_identifier",
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "min_timestamp",
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "max_timestamp",
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "explode": true,
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FlowHistoryItem"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/history/quark/{id}": {
      "get": {
        "tags": [
          "History"
        ],
        "operationId": "QuarkGetQuarkHistoryDetails",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuarkHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/history/quark": {
      "put": {
        "tags": [
          "History"
        ],
        "operationId": "UpsertQuarkHistory",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/QuarkHistoryItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuarkHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/history/flow/{id}": {
      "get": {
        "tags": [
          "History"
        ],
        "operationId": "GetLatticeHistoryDetails",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/FlowHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/history/flow": {
      "put": {
        "tags": [
          "History"
        ],
        "operationId": "CreateLatticeHistory",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/FlowHistoryItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/FlowHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/history/clear_all_history": {
      "get": {
        "tags": [
          "History"
        ],
        "operationId": "DANGERClearAllHistory",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseMessage"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/management": {
      "get": {
        "tags": [
          "WorkerManagement"
        ],
        "operationId": "WorkerManagementInfo",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/WorkerInfo"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/management/python_status": {
      "get": {
        "tags": [
          "WorkerManagement"
        ],
        "operationId": "WorkerPythonStatus",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/PythonEnvInfo"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/management/auth_status": {
      "get": {
        "tags": [
          "WorkerManagement"
        ],
        "operationId": "WorkerCheckAuthentication",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Identity"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/management/ping": {
      "post": {
        "tags": [
          "WorkerManagement"
        ],
        "operationId": "WorkerPingWorker",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseMessage"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        }
      }
    },
    "/worker/management/tokio": {
      "get": {
        "tags": [
          "WorkerManagement"
        ],
        "operationId": "WorkerTokioStatus",
        "parameters": [
          {
            "in": "query",
            "name": "with_dump",
            "deprecated": false,
            "schema": {
              "type": "boolean"
            },
            "explode": true,
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/TokioStats"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/agent": {
      "get": {
        "tags": [
          "Agents"
        ],
        "operationId": "ListAllAgents",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/AgentList"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/agent/chat_rag_demo": {
      "post": {
        "tags": [
          "Agents"
        ],
        "operationId": "ChatRag",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/QADemoInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/registry": {
      "get": {
        "tags": [
          "Registry"
        ],
        "operationId": "ListRegistry",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/RegistryAPI"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/registry/quark/{cat}/{name}": {
      "get": {
        "tags": [
          "Registry"
        ],
        "operationId": "GetQuarkRegistryDetails",
        "parameters": [
          {
            "in": "path",
            "name": "cat",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "explode": true,
            "style": "simple"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuarkRegistryItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/registry/lattice/{id}": {
      "get": {
        "tags": [
          "Registry"
        ],
        "operationId": "GetLatticeRegistryDetails",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/LatticeRegistryItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/registry/lattice/{id}/flow": {
      "get": {
        "tags": [
          "Registry"
        ],
        "operationId": "GetLatticeRegistryReactFlow",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/LatticeReactFlowGraph"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/registry/lattice/register": {
      "put": {
        "tags": [
          "Registry"
        ],
        "operationId": "RegisterLattice",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/LatticeRegistryItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseMessage"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/registry/quark/files/s3_read_files_binary/run": {
      "post": {
        "tags": [
          "Registry"
        ],
        "operationId": "RunS3ReadFileQuark",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/S3ReadWholeFileQuarkInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuarkHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/registry/quark/extractor/docling_extractor/run": {
      "post": {
        "tags": [
          "Registry"
        ],
        "operationId": "RunDoclingExtractQuark",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/DoclingQuarkInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuarkHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/registry/quark/files/s3_read_csv/run": {
      "post": {
        "tags": [
          "Registry"
        ],
        "operationId": "RunS3ReadCSVQuark",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/S3ReadCSVQuarkInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuarkHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/registry/quark/ai/openai_embeddings/run": {
      "post": {
        "tags": [
          "Registry"
        ],
        "operationId": "RunOpenAIEmbeddingsQuark",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/OpenAIEmbeddingsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuarkHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/registry/quark/transformer/docling_chunker/run": {
      "post": {
        "tags": [
          "Registry"
        ],
        "operationId": "RunDoclingChunkerQuark",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/DoclingChunkerQuarkInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuarkHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/registry/quark/ai/openai_completion_base/run": {
      "post": {
        "tags": [
          "Registry"
        ],
        "operationId": "RunOpenAICompletionQuark",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/OpenAICompletionsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuarkHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/registry/quark/databases/snowflake_read/run": {
      "post": {
        "tags": [
          "Registry"
        ],
        "operationId": "RunSnowflakeReadQuark",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/SnowflakeSQLReadQuarkInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuarkHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/registry/quark/transformer/handlebars_base/run": {
      "post": {
        "tags": [
          "Registry"
        ],
        "operationId": "RunHandleBarsQuark",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/HandlebarsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuarkHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/registry/quark/vector/lancedb_ingest/run": {
      "post": {
        "tags": [
          "Registry"
        ],
        "operationId": "RunLanceDBIngestQuark",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/LanceDBDataInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuarkHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/registry/quark/vector/lancedb_search/run": {
      "post": {
        "tags": [
          "Registry"
        ],
        "operationId": "RunLanceDBSearchQuark",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/LanceDBSearchInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuarkHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/registry/quark/files/opendal/run": {
      "post": {
        "tags": [
          "Registry"
        ],
        "operationId": "RunOpendalQuark",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/OpendalQuarkInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuarkHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/registry/quark/files/opendal/schema": {
      "post": {
        "tags": [
          "Registry"
        ],
        "operationId": "OpendalQuarkSchema",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        }
      }
    },
    "/worker/registry/quark/transformer/onnx_sat_segmentation/run": {
      "post": {
        "tags": [
          "Registry"
        ],
        "operationId": "RunSatSegmentQuark",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/SaTSegmentationInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuarkHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/registry/quark/transformer/context_extract_prompt/run": {
      "post": {
        "tags": [
          "Registry"
        ],
        "operationId": "RunExtractorPromptQuark",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/ExtractorPromptQuarkInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuarkHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/registry/quark/transformer/parse_extractor_llm/run": {
      "post": {
        "tags": [
          "Registry"
        ],
        "operationId": "RunExtractorLLMParseQuark",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/ExtractorLLMParserQuarkInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuarkHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/registry/quark/transformer/context_classifier_prompt/run": {
      "post": {
        "tags": [
          "Registry"
        ],
        "operationId": "RunClassifierPromptQuark",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/ClassifierPromptQuarkInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuarkHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/registry/quark/transformer/parse_classifier_llm/run": {
      "post": {
        "tags": [
          "Registry"
        ],
        "operationId": "RunClassifierLLMParseQuark",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/ClassifierLLMParserQuarkInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuarkHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/registry/quark/other/context_insert_objects/run": {
      "post": {
        "tags": [
          "Registry"
        ],
        "operationId": "RunContextInsertObjectsQuark",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/InsertObjectsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuarkHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/registry/quark/other/context_insert_segments/run": {
      "post": {
        "tags": [
          "Registry"
        ],
        "operationId": "RunContextInsertSegmentsQuark",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/InsertSegmentsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuarkHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/registry/quark/other/context_insert_classified_segments/run": {
      "post": {
        "tags": [
          "Registry"
        ],
        "operationId": "RunContextInsertClassifiedSegmentsQuark",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/InsertClassifiedSegmentsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuarkHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/registry/quark/other/context_insert_extracted_segments/run": {
      "post": {
        "tags": [
          "Registry"
        ],
        "operationId": "RunContextInsertExtractedSegmentsQuark",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/InsertExtractedSegmentsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/QuarkHistoryItem"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/source": {
      "get": {
        "tags": [
          "Sources"
        ],
        "operationId": "ListSources",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseMessage"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Sources"
        ],
        "operationId": "AddSource",
        "requestBody": {
          "content": {
            "application/json; charset=utf-8": {
              "schema": {
                "$ref": "#/components/schemas/CreateSourceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Source"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/source/{id}": {
      "get": {
        "tags": [
          "Sources"
        ],
        "operationId": "GetSource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Source"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/source/{id}/list": {
      "get": {
        "tags": [
          "Sources"
        ],
        "operationId": "ListSource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          },
          {
            "in": "query",
            "name": "path",
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "explode": true,
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/FileListResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/source/{id}/add_all": {
      "get": {
        "tags": [
          "Sources"
        ],
        "operationId": "AddAllSource",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          },
          {
            "in": "query",
            "name": "path",
            "deprecated": false,
            "schema": {
              "type": "string"
            },
            "explode": true,
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponseMessage"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/context/files": {
      "get": {
        "tags": [
          "Context"
        ],
        "operationId": "ListFiles",
        "parameters": [
          {
            "in": "query",
            "name": "source_id",
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "limit",
            "deprecated": false,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "offset",
            "deprecated": false,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "explode": true,
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-QUERY-METADATA": {
                "style": "simple",
                "required": true,
                "deprecated": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/x-apache-arrow-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/context/classifiers": {
      "get": {
        "tags": [
          "Context"
        ],
        "operationId": "ListClassifiers",
        "parameters": [
          {
            "in": "query",
            "name": "source_id",
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "limit",
            "deprecated": false,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "offset",
            "deprecated": false,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "explode": true,
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-QUERY-METADATA": {
                "style": "simple",
                "required": true,
                "deprecated": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/x-apache-arrow-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/context/extractors": {
      "get": {
        "tags": [
          "Context"
        ],
        "operationId": "ListExtractors",
        "parameters": [
          {
            "in": "query",
            "name": "source_id",
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "limit",
            "deprecated": false,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "offset",
            "deprecated": false,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "explode": true,
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-QUERY-METADATA": {
                "style": "simple",
                "required": true,
                "deprecated": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/x-apache-arrow-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/context/classifiers/{classifier_id}/text": {
      "get": {
        "tags": [
          "Context"
        ],
        "operationId": "GetClassifierText",
        "parameters": [
          {
            "in": "path",
            "name": "classifier_id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-QUERY-METADATA": {
                "style": "simple",
                "required": true,
                "deprecated": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/x-apache-arrow-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/worker/context/extractors/{extractor_id}/text": {
      "get": {
        "tags": [
          "Context"
        ],
        "operationId": "GetExtractorText",
        "parameters": [
          {
            "in": "path",
            "name": "extractor_id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-QUERY-METADATA": {
                "style": "simple",
                "required": true,
                "deprecated": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/x-apache-arrow-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/dataset": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "operationId": "GetAllDataSetMetadata",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataSetInfo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/dataset/{id}": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "operationId": "GetDatasetMetadata",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/DataSetInfo"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/dataset/{id}/json": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "operationId": "GetDatasetAsJson",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          },
          {
            "in": "query",
            "name": "max_cell_size",
            "deprecated": false,
            "schema": {
              "type": "integer",
              "format": "uint32"
            },
            "explode": true,
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/dataset/{id}/csv": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "operationId": "GetDatasetAsCSV",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          },
          {
            "in": "query",
            "name": "limit",
            "deprecated": false,
            "schema": {
              "type": "integer",
              "format": "uint32"
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "offset",
            "deprecated": false,
            "schema": {
              "type": "integer",
              "format": "uint32"
            },
            "explode": true,
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "CONTENT-DISPOSITION": {
                "style": "simple",
                "required": true,
                "deprecated": false,
                "schema": {
                  "type": "string"
                }
              },
              "FILENAME": {
                "style": "simple",
                "required": true,
                "deprecated": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/dataset/{id}/arrow": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "operationId": "GetDatasetAsArrow",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          },
          {
            "in": "query",
            "name": "_limit",
            "deprecated": false,
            "schema": {
              "type": "integer",
              "format": "uint32"
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "_offset",
            "deprecated": false,
            "schema": {
              "type": "integer",
              "format": "uint32"
            },
            "explode": true,
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-QUERY-METADATA": {
                "style": "simple",
                "required": true,
                "deprecated": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/x-apache-arrow-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/dataset/{id}/files": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "operationId": "sourceBrowserFiles",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          },
          {
            "in": "query",
            "name": "_limit",
            "deprecated": false,
            "schema": {
              "type": "integer",
              "format": "uint32"
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "_offset",
            "deprecated": false,
            "schema": {
              "type": "integer",
              "format": "uint32"
            },
            "explode": true,
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-QUERY-METADATA": {
                "style": "simple",
                "required": true,
                "deprecated": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/x-apache-arrow-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/dataset/{id}/{file_id}/chunks": {
      "get": {
        "tags": [
          "Datasets"
        ],
        "operationId": "sourceBrowserFileChunks",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          },
          {
            "in": "path",
            "name": "file_id",
            "required": true,
            "deprecated": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "explode": true,
            "style": "simple"
          },
          {
            "in": "query",
            "name": "_limit",
            "deprecated": false,
            "schema": {
              "type": "integer",
              "format": "uint32"
            },
            "explode": true,
            "style": "form"
          },
          {
            "in": "query",
            "name": "_offset",
            "deprecated": false,
            "schema": {
              "type": "integer",
              "format": "uint32"
            },
            "explode": true,
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-QUERY-METADATA": {
                "style": "simple",
                "required": true,
                "deprecated": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/x-apache-arrow-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseMessage"
                }
              }
            }
          }
        },
        "security": [
          {
            "CookieAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "APIKey": {
        "title": "APIKey",
        "type": "object",
        "properties": {
          "identity_api_key_id": {
            "readOnly": true,
            "description": "# Key ID",
            "type": "string"
          },
          "name": {
            "description": "# Key Name",
            "type": "string"
          },
          "prefix": {
            "readOnly": true,
            "description": "# Key Prefix",
            "type": "string"
          },
          "expires_at": {
            "description": "# Expiration Date",
            "type": "string",
            "format": "date-time"
          },
          "active": {
            "description": "# Active",
            "type": "boolean"
          },
          "identity_id": {
            "readOnly": true,
            "description": "# Identity",
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "identity_api_key_id",
          "name",
          "prefix",
          "active",
          "identity_id",
          "created_at",
          "updated_at"
        ]
      },
      "Classifier": {
        "title": "Classifier",
        "type": "object",
        "properties": {
          "classifier_id": {
            "readOnly": true,
            "description": "# Classifier ID",
            "type": "string",
            "format": "uuid"
          },
          "parent_classifier_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "description": "# Classifier Name",
            "type": "string"
          },
          "description": {
            "description": "# Classifier Description\nNote: the LLM uses this for matching so be descriptive",
            "type": "string"
          },
          "model_role_id": {
            "description": "# Model Role\nDetermines which model executes the classifier",
            "type": "string",
            "format": "uuid"
          },
          "reference_depth": {
            "description": "# Match Segments or Sentences?",
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDepth"
              },
              {
                "description": "# Match Segments or Sentences?"
              }
            ]
          },
          "owned_by_identity_id": {
            "description": "# Owner ID",
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "readOnly": true,
            "description": "# Created",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "description": "# Last Updated",
            "default": "2025-07-16T13:04:39.728950837+00:00",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name",
          "model_role_id",
          "reference_depth",
          "owned_by_identity_id"
        ]
      },
      "CreateAPIKeyRequest": {
        "title": "CreateAPIKeyRequest",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name"
        ]
      },
      "CreateAPIKeyResponse": {
        "title": "CreateAPIKeyResponse",
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          }
        },
        "required": [
          "key"
        ]
      },
      "ErrorResponseMessage": {
        "title": "ErrorResponseMessage",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "success",
          "message"
        ]
      },
      "Extractor": {
        "title": "Extractor",
        "type": "object",
        "properties": {
          "extractor_id": {
            "readOnly": true,
            "description": "# Extractor ID",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "description": "# Extractor Name",
            "type": "string"
          },
          "description": {
            "description": "# Extractor Description\nNote: the LLM uses this to perform the extraction, so be descriptive",
            "type": "string"
          },
          "data_type": {
            "description": "# Type of data to extract",
            "allOf": [
              {
                "$ref": "#/components/schemas/ExtractorDataType"
              },
              {
                "description": "# Type of data to extract"
              }
            ]
          },
          "config": {},
          "model_role_id": {
            "description": "# Model Role to use for extraction",
            "type": "string",
            "format": "uuid"
          },
          "reference_depth": {
            "description": "# Match Segments or Sentences",
            "allOf": [
              {
                "$ref": "#/components/schemas/ReferenceDepth"
              },
              {
                "description": "# Match Segments or Sentences"
              }
            ]
          },
          "add_references": {
            "description": "# Add references to the extracted data\nDefault is true",
            "default": true,
            "type": "boolean"
          },
          "add_reason": {
            "description": "# Add reason for extracting this data",
            "default": true,
            "type": "boolean"
          },
          "examples": {
            "description": "# Examples of the data to extract"
          },
          "owned_by_identity_id": {
            "description": "# Owner",
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "readOnly": true,
            "description": "# Created",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "description": "# Updated",
            "default": "2025-07-16T13:04:39.728642462+00:00",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name",
          "data_type",
          "model_role_id",
          "reference_depth",
          "owned_by_identity_id"
        ]
      },
      "ExtractorDataType": {
        "type": "string",
        "enum": [
          "String",
          "Boolean",
          "Integer",
          "Float",
          "Rating",
          "Object",
          "Date",
          "Label"
        ]
      },
      "Identity": {
        "title": "Identity",
        "type": "object",
        "properties": {
          "identity_id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "identity_type": {
            "$ref": "#/components/schemas/IdentityType"
          },
          "created_at": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "last_login": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "disabled": {
            "type": "boolean"
          },
          "username": {
            "type": "string"
          },
          "external": {
            "readOnly": true,
            "type": "boolean"
          },
          "external_id": {
            "readOnly": true,
            "type": "string"
          },
          "password": {
            "writeOnly": true,
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "avatar_url": {
            "readOnly": true,
            "type": "string"
          },
          "external_updated_at": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "email_verified": {
            "readOnly": true,
            "type": "boolean"
          }
        },
        "required": [
          "identity_id",
          "identity_type",
          "disabled",
          "username",
          "external",
          "email_verified"
        ]
      },
      "IdentityRoleAPIModel": {
        "title": "IdentityRoleAPIModel",
        "type": "object",
        "properties": {
          "role_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "owner": {
            "$ref": "#/components/schemas/Identity"
          },
          "identities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identity"
            }
          }
        },
        "required": [
          "role_id",
          "name",
          "identities"
        ]
      },
      "IdentityType": {
        "type": "string",
        "enum": [
          "User",
          "SystemInternal",
          "SystemExternal"
        ]
      },
      "MlModel": {
        "title": "MlModel",
        "type": "object",
        "properties": {
          "model_id": {
            "readOnly": true,
            "description": "# Model ID",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "description": "# Model Name",
            "type": "string"
          },
          "description": {
            "description": "# Description",
            "type": "string"
          },
          "model_type": {
            "description": "# Model Type",
            "allOf": [
              {
                "$ref": "#/components/schemas/MlModelType"
              },
              {
                "description": "# Model Type"
              }
            ]
          },
          "model_provider": {
            "description": "# Model Provider",
            "allOf": [
              {
                "$ref": "#/components/schemas/MlModelProvider"
              },
              {
                "description": "# Model Provider"
              }
            ]
          },
          "config": {
            "description": "# Provider-specific configuration (JSON)"
          },
          "owned_by_identity_id": {
            "description": "# Model Owner",
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "default": "2025-07-16T13:04:39.728743212+00:00",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name",
          "model_type",
          "model_provider",
          "config",
          "owned_by_identity_id"
        ]
      },
      "MlModelProvider": {
        "type": "string",
        "enum": [
          "Native",
          "Onnx",
          "OpenAI",
          "Other"
        ]
      },
      "MlModelRole": {
        "title": "MlModelRole",
        "type": "object",
        "properties": {
          "model_role_id": {
            "readOnly": true,
            "description": "# Model Role ID",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "description": "# Model Role Name",
            "type": "string"
          },
          "description": {
            "description": "# Description",
            "type": "string"
          },
          "model_id": {
            "description": "# Associated Model",
            "type": "string",
            "format": "uuid"
          },
          "config_override": {
            "description": "# Optional Override for Model Configuration"
          },
          "owned_by_identity_id": {
            "description": "# Model Role Owner",
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "default": "2025-07-16T13:04:39.728845920+00:00",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name",
          "model_id",
          "config_override",
          "owned_by_identity_id"
        ]
      },
      "MlModelType": {
        "type": "string",
        "enum": [
          "Local",
          "API",
          "Other"
        ]
      },
      "ReferenceDepth": {
        "type": "string",
        "enum": [
          "Segment",
          "Sentence"
        ]
      },
      "Role": {
        "title": "Role",
        "type": "object",
        "properties": {
          "role_id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "owned_by_identity_id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "role_id",
          "name"
        ]
      },
      "Source": {
        "title": "Source",
        "type": "object",
        "properties": {
          "source_id": {
            "readOnly": true,
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/SourceStatus"
          },
          "source_type": {
            "$ref": "#/components/schemas/SourceType"
          },
          "config_type": {
            "$ref": "#/components/schemas/SourceConfigType"
          },
          "config": {},
          "owned_by_identity_id": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "source_id",
          "name",
          "status",
          "source_type",
          "config_type",
          "config",
          "owned_by_identity_id",
          "created_at"
        ]
      },
      "SourceConfigType": {
        "type": "string",
        "enum": [
          "S3ObjectStore",
          "Other"
        ]
      },
      "SourceStatus": {
        "type": "string",
        "enum": [
          "SetupInProgress",
          "SetupComplete",
          "Other"
        ]
      },
      "SourceType": {
        "type": "string",
        "enum": [
          "Files",
          "Database",
          "Other"
        ]
      },
      "SuccessResponseMessage": {
        "title": "SuccessResponseMessage",
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "success",
          "message"
        ]
      },
      "FlowHistoryEdgeItem": {
        "title": "FlowHistoryEdgeItem",
        "description": "Represents an edge in the history of a Lattice, connecting two nodes.\n\n# Fields\n- `source`: The unique identifier of the source node/quark.\n- `target`: The unique identifier of the target node/quark.",
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid"
          },
          "source": {
            "description": "The unique identifier of the source node/quark.",
            "type": "string",
            "format": "uuid"
          },
          "target": {
            "description": "The unique identifier of the target node/quark.",
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "source",
          "target"
        ]
      },
      "FlowHistoryItem": {
        "title": "FlowHistoryItem",
        "type": "object",
        "properties": {
          "flow_history_id": {
            "description": "The unique identifier for the Lattice.",
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "description": "The timestamp when the Lattice was created.",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "nodes": {
            "description": "A list of unique identifiers for the nodes (Quarks) in the Lattice.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "edges": {
            "description": "A list of relationships (edges) between the nodes in the Lattice.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlowHistoryEdgeItem"
            }
          },
          "registry_id": {
            "description": "The identifier for the registry associated with the Lattice.",
            "type": "string",
            "format": "uuid"
          },
          "registry_qrn": {
            "description": "User-facing fully qualified identifier for the registry where the Flow is defined.",
            "type": "string"
          },
          "input": {
            "description": "Input data provided to the Lattice, stored as a JSON value."
          },
          "output": {
            "description": "Optional output data generated by the Lattice, stored as a JSON value."
          },
          "metrics": {
            "description": "Performance-related data or metrics associated with the Lattice."
          },
          "status": {
            "description": "The current status of the Lattice.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FlowStatus"
              },
              {
                "description": "The current status of the Lattice."
              }
            ]
          },
          "identity_id": {
            "description": "Identity of the Lattice Runner",
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "flow_history_id",
          "created_at",
          "updated_at",
          "nodes",
          "edges",
          "registry_qrn",
          "input",
          "metrics",
          "status",
          "identity_id"
        ]
      },
      "FlowStatus": {
        "description": "Represents the status/stage of a Quark instance",
        "type": "string",
        "enum": [
          "New",
          "Scheduled",
          "Running",
          "Completed",
          "Failed"
        ]
      },
      "HistoryContainerAPI": {
        "title": "HistoryContainerAPI",
        "type": "object",
        "properties": {
          "quarks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuarkHistoryItem"
            }
          },
          "lattices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlowHistoryItem"
            }
          }
        },
        "required": [
          "quarks",
          "lattices"
        ]
      },
      "QuarkHistoryItem": {
        "title": "QuarkHistoryItem",
        "description": "Represents a historical record of a Quark, including its metadata, input, output, and status.",
        "type": "object",
        "properties": {
          "quark_history_id": {
            "description": "Unique identifier for the Quark.",
            "type": "string",
            "format": "uuid"
          },
          "supervisor_task_id": {
            "description": "Supervisor [WorkerTask] id\nOptional, as there are stages when no supervisor is assigned",
            "type": "string",
            "format": "uuid"
          },
          "runner_task_id": {
            "description": "Runner [WorkerTask] id\nOptional, as there are stages when no runner is assigned",
            "type": "string",
            "format": "uuid"
          },
          "worker_id": {
            "description": "Runner [WorkerTask] id\nOptional, as there are stages when no worker is assigned",
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "description": "The timestamp indicating when the Quark was created.",
            "type": "string",
            "format": "date-time"
          },
          "flow_history_id": {
            "description": "Identifier of the associated Flow.",
            "type": "string",
            "format": "uuid"
          },
          "registry_qrn": {
            "description": "User-facing fully qualified identifier for the registry where the Quark is defined.",
            "type": "string"
          },
          "registry_id": {
            "description": "Registry ID of the database entry",
            "type": "string",
            "format": "uuid"
          },
          "input": {
            "description": "Input data associated with the Quark, stored as a JSON value."
          },
          "output": {
            "description": "Output data produced by the Quark execution, stored as a JSON value."
          },
          "state": {
            "description": "Quark State"
          },
          "status": {
            "description": "The current status of the Quark.",
            "allOf": [
              {
                "$ref": "#/components/schemas/QuarkStatus"
              },
              {
                "description": "The current status of the Quark."
              }
            ]
          },
          "identity_id": {
            "description": "Identity of Quark runner",
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "quark_history_id",
          "created_at",
          "flow_history_id",
          "registry_qrn",
          "input",
          "output",
          "state",
          "status",
          "identity_id"
        ]
      },
      "QuarkStatus": {
        "description": "Represents the status/stage of a Quark instance",
        "type": "string",
        "enum": [
          "New",
          "Scheduled",
          "Running",
          "OutputStaged",
          "Completed",
          "Failed"
        ]
      },
      "AgentInfo": {
        "title": "AgentInfo",
        "description": "REST API representation of the [Agent]",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/AgentStatus"
          },
          "flow_agent": {
            "$ref": "#/components/schemas/FlowAgentInfo"
          }
        },
        "required": [
          "id",
          "name",
          "status",
          "flow_agent"
        ]
      },
      "AgentList": {
        "title": "AgentList",
        "type": "object",
        "properties": {
          "agents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentInfo"
            }
          }
        },
        "required": [
          "agents"
        ]
      },
      "AgentStatus": {
        "type": "string",
        "enum": [
          "New",
          "Running",
          "Stopped",
          "Paused",
          "Error"
        ]
      },
      "ClassifierLLMParserQuarkInput": {
        "title": "ClassifierLLMParserQuarkInput",
        "type": "object",
        "properties": {
          "flow_id": {
            "type": "string",
            "format": "uuid"
          },
          "ipc_dataset_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "flow_id",
          "ipc_dataset_id"
        ]
      },
      "ClassifierPromptQuarkInput": {
        "title": "ClassifierPromptQuarkInput",
        "type": "object",
        "properties": {
          "flow_id": {
            "type": "string",
            "format": "uuid"
          },
          "ipc_dataset_id": {
            "type": "string",
            "format": "uuid"
          },
          "classifier_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "opt_rendered_col": {
            "type": "string"
          }
        },
        "required": [
          "flow_id",
          "ipc_dataset_id",
          "classifier_ids"
        ]
      },
      "CreateSourceRequest": {
        "title": "CreateSourceRequest",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "config": {
            "$ref": "#/components/schemas/FileSourceConfig"
          }
        },
        "required": [
          "name",
          "config"
        ]
      },
      "DescribedInputField": {
        "title": "DescribedInputField",
        "type": "object",
        "properties": {
          "field_type": {
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "field_name": {
            "type": "string"
          },
          "ipc_schema": {
            "$ref": "#/components/schemas/SchemaInfo"
          },
          "description": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "default_value": {},
          "advanced": {
            "type": "boolean"
          },
          "sensitive": {
            "type": "boolean"
          }
        },
        "required": [
          "field_type",
          "friendly_name",
          "field_name",
          "required",
          "advanced",
          "sensitive"
        ]
      },
      "DoclingChunkerQuarkInput": {
        "title": "DoclingChunkerQuarkInput",
        "type": "object",
        "properties": {
          "ipc_dataset_id": {
            "type": "string",
            "format": "uuid"
          },
          "lattice_id": {
            "type": "string",
            "format": "uuid"
          },
          "opt_model": {
            "type": "string"
          },
          "opt_max_tokens": {
            "type": "integer",
            "format": "uint64"
          },
          "opt_merge_peers": {
            "type": "boolean"
          },
          "opt_text_col": {
            "type": "string"
          },
          "opt_drop_cols": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "ipc_dataset_id",
          "lattice_id"
        ]
      },
      "DoclingFileInputType": {
        "description": "Supported input types for Docling\n\nDefault is All formats",
        "type": "string",
        "enum": [
          "AsciiDoc",
          "Docx",
          "HTML",
          "Image",
          "Markdown",
          "PDF",
          "PPTX"
        ]
      },
      "DoclingOutputFormat": {
        "description": "Supported output types for Docling",
        "type": "string",
        "enum": [
          "DocTags",
          "HTML",
          "JSON",
          "Markdown",
          "Text"
        ]
      },
      "DoclingQuarkInput": {
        "title": "DoclingQuarkInput",
        "description": "Thin wrapper around [DoclingExtractorInput] plus the ID of the input IPC dataset",
        "type": "object",
        "properties": {
          "ipc_dataset_id": {
            "type": "string",
            "format": "uuid"
          },
          "lattice_id": {
            "type": "string",
            "format": "uuid"
          },
          "opt_output_type": {
            "description": "What type of text to extract\n\nDefault is [Markdown]",
            "allOf": [
              {
                "$ref": "#/components/schemas/DoclingOutputFormat"
              },
              {
                "description": "What type of text to extract\n\nDefault is [Markdown]"
              }
            ]
          },
          "opt_do_ocr": {
            "description": "Whether to perform OCR\n\nDefault is [true]",
            "type": "boolean"
          },
          "opt_input_file_types": {
            "description": "Limit input types\n\nDefault is [Nome] - all supported",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DoclingFileInputType"
            }
          },
          "opt_max_pages": {
            "description": "Limit the number of pages to extract\n\nDefault is [None]",
            "type": "integer",
            "format": "uint64"
          },
          "opt_max_file_size": {
            "description": "Limit the size of the file to extract from (in bytes)\n\nDefault: [None]",
            "type": "integer",
            "format": "uint64"
          },
          "opt_generate_page_images": {
            "description": "Default: [true]",
            "type": "boolean"
          },
          "opt_generate_picture_images": {
            "description": "Default: [true]",
            "type": "boolean"
          },
          "opt_image_resolution_scale": {
            "description": "Default: 2.0",
            "type": "number",
            "format": "float"
          },
          "opt_do_cell_matching": {
            "description": "Default is [false]",
            "type": "boolean"
          },
          "opt_do_table_structure": {
            "description": "Default is [false]",
            "type": "boolean"
          },
          "opt_use_gpu": {
            "description": "Best effort to use GPU\n\nDefault is [true]",
            "type": "boolean"
          },
          "opt_device": {
            "description": "Device to use for acceleration - options are CPU, CUDA, MPS, or AUTO\n\nDefault is AUTO",
            "type": "string"
          }
        },
        "required": [
          "ipc_dataset_id",
          "lattice_id"
        ]
      },
      "ExtractorLLMParserQuarkInput": {
        "title": "ExtractorLLMParserQuarkInput",
        "type": "object",
        "properties": {
          "flow_id": {
            "type": "string",
            "format": "uuid"
          },
          "ipc_dataset_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "flow_id",
          "ipc_dataset_id"
        ]
      },
      "ExtractorPromptQuarkInput": {
        "title": "ExtractorPromptQuarkInput",
        "type": "object",
        "properties": {
          "flow_id": {
            "type": "string",
            "format": "uuid"
          },
          "ipc_dataset_id": {
            "type": "string",
            "format": "uuid"
          },
          "extractor_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "opt_rendered_col": {
            "type": "string"
          }
        },
        "required": [
          "flow_id",
          "ipc_dataset_id",
          "extractor_ids"
        ]
      },
      "FieldInfo": {
        "title": "FieldInfo",
        "description": "API-Friendly representation of a field in [Schema]",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "data_type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "data_type"
        ]
      },
      "FileListResponse": {
        "title": "FileListResponse",
        "type": "object",
        "properties": {
          "root_path": {
            "type": "string"
          },
          "relative_path": {
            "type": "string"
          },
          "prefixes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "objects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuarkFileObject"
            }
          }
        },
        "required": [
          "root_path",
          "relative_path",
          "prefixes",
          "objects"
        ]
      },
      "FileSourceConfig": {
        "type": "object",
        "anyOf": [
          {
            "$ref": "#/components/schemas/S3ObjectStoreConfig"
          }
        ]
      },
      "FlowAgentInfo": {
        "title": "FlowAgentInfo",
        "description": "REST API representation of the [FlowAgent]",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "id"
        ]
      },
      "FlowType": {
        "type": "string",
        "enum": [
          "Ingest",
          "Inference",
          "Other"
        ]
      },
      "HandlebarsInput": {
        "title": "HandlebarsInput",
        "type": "object",
        "properties": {
          "lattice_id": {
            "type": "string",
            "format": "uuid"
          },
          "ipc_dataset_id": {
            "type": "string",
            "format": "uuid"
          },
          "template": {
            "type": "string"
          },
          "input_columns": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "opt_rendered_col": {
            "type": "string"
          }
        },
        "required": [
          "lattice_id",
          "ipc_dataset_id",
          "template",
          "input_columns"
        ]
      },
      "InsertClassifiedSegmentsInput": {
        "title": "InsertClassifiedSegmentsInput",
        "type": "object",
        "properties": {
          "flow_id": {
            "type": "string",
            "format": "uuid"
          },
          "ipc_dataset_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "flow_id",
          "ipc_dataset_id"
        ]
      },
      "InsertExtractedSegmentsInput": {
        "title": "InsertExtractedSegmentsInput",
        "type": "object",
        "properties": {
          "flow_id": {
            "type": "string",
            "format": "uuid"
          },
          "ipc_dataset_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "flow_id",
          "ipc_dataset_id"
        ]
      },
      "InsertObjectsInput": {
        "title": "InsertObjectsInput",
        "type": "object",
        "properties": {
          "flow_id": {
            "type": "string",
            "format": "uuid"
          },
          "ipc_dataset_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "flow_id",
          "ipc_dataset_id"
        ]
      },
      "InsertSegmentsInput": {
        "title": "InsertSegmentsInput",
        "type": "object",
        "properties": {
          "flow_id": {
            "type": "string",
            "format": "uuid"
          },
          "ipc_dataset_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "flow_id",
          "ipc_dataset_id"
        ]
      },
      "LanceDBDataInput": {
        "title": "LanceDBDataInput",
        "type": "object",
        "properties": {
          "ipc_dataset_id": {
            "type": "string",
            "format": "uuid"
          },
          "lattice_id": {
            "type": "string",
            "format": "uuid"
          },
          "table_name": {
            "type": "string"
          },
          "opt_operation": {
            "type": "string"
          },
          "opt_uri": {
            "type": "string"
          }
        },
        "required": [
          "ipc_dataset_id",
          "lattice_id",
          "table_name"
        ]
      },
      "LanceDBSearchInput": {
        "title": "LanceDBSearchInput",
        "type": "object",
        "properties": {
          "lattice_id": {
            "type": "string",
            "format": "uuid"
          },
          "table_name": {
            "type": "string"
          },
          "query": {
            "$ref": "#/components/schemas/SimpleInputValue"
          },
          "opt_uri": {
            "type": "string"
          }
        },
        "required": [
          "lattice_id",
          "table_name",
          "query"
        ]
      },
      "LatticeReactFlowEdge": {
        "title": "LatticeReactFlowEdge",
        "description": "Represents a React Flow Edge in the Lattice graph.\n\n# Fields\n* `type` - Shape of the edge\n* `id` - A unique identifier for the edge.\n* `source` - The identifier of the source node this edge connects from.\n* `target` - The identifier of the target node this edge connects to.\n* `animated` - A boolean indicating whether this edge has an animation effect.\n* `style` - Optional style properties for customizing the edge's appearance.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "description": "A unique identifier for the edge.",
            "type": "string"
          },
          "source": {
            "description": "The identifier of the source node this edge connects from.",
            "type": "string"
          },
          "target": {
            "description": "The identifier of the target node this edge connects to.",
            "type": "string"
          },
          "animated": {
            "description": "A boolean indicating whether this edge has an animation effect.",
            "type": "boolean"
          },
          "style": {
            "description": "Optional style properties for customizing the edge's appearance."
          }
        },
        "required": [
          "type",
          "id",
          "source",
          "target",
          "animated"
        ]
      },
      "LatticeReactFlowGraph": {
        "title": "LatticeReactFlowGraph",
        "description": "Represents a React Flow Graph in the Lattice.\n\nThis struct contains information about a graph's name, description,\nnodes, and edges.\n\n# Fields\n* `name` - The name of the graph.\n* `description` - A brief description of the graph.\n* `nodes` - A list of nodes in the graph.\n* `edges` - A list of edges connecting the nodes in the graph.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the graph.",
            "type": "string"
          },
          "description": {
            "description": "A brief description of the graph.",
            "type": "string"
          },
          "nodes": {
            "description": "A list of nodes in the graph.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LatticeReactFlowNode"
            }
          },
          "edges": {
            "description": "A list of edges connecting the nodes in the graph.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LatticeReactFlowEdge"
            }
          }
        },
        "required": [
          "name",
          "description",
          "nodes",
          "edges"
        ]
      },
      "LatticeReactFlowNode": {
        "title": "LatticeReactFlowNode",
        "description": "Represents a React Flow Node in the Lattice graph.\n\n# Fields\n* `id` - A unique identifier for the node.\n* `type` - The type of the node (serialized as \"type\").\n* `data` - The data associated with the node, including metadata like the label.\n* `position` - The position of the node in the graph (x and y coordinates).\n* `style` - Optional style properties for configuring the appearance of the node.",
        "type": "object",
        "properties": {
          "id": {
            "description": "A unique identifier for the node.",
            "type": "string"
          },
          "type": {
            "description": "The type of the node (serialized as \"type\").",
            "type": "string"
          },
          "data": {
            "description": "The data associated with the node, including metadata like the label.",
            "allOf": [
              {
                "$ref": "#/components/schemas/LatticeReactFlowNodeData"
              },
              {
                "description": "The data associated with the node, including metadata like the label."
              }
            ]
          },
          "position": {
            "description": "The position of the node in the graph (x and y coordinates).",
            "allOf": [
              {
                "$ref": "#/components/schemas/LatticeRectFlowNodePosition"
              },
              {
                "description": "The position of the node in the graph (x and y coordinates)."
              }
            ]
          },
          "source_handle_position": {
            "description": "Source Handle Position",
            "allOf": [
              {
                "$ref": "#/components/schemas/LatticeReactFlowPos"
              },
              {
                "description": "Source Handle Position"
              }
            ]
          },
          "target_handle_position": {
            "description": "Target Handle Position",
            "allOf": [
              {
                "$ref": "#/components/schemas/LatticeReactFlowPos"
              },
              {
                "description": "Target Handle Position"
              }
            ]
          },
          "style": {
            "description": "Optional style properties for configuring the appearance of the node."
          }
        },
        "required": [
          "id",
          "type",
          "data",
          "position",
          "source_handle_position",
          "target_handle_position"
        ]
      },
      "LatticeReactFlowNodeData": {
        "title": "LatticeReactFlowNodeData",
        "description": "Represents the data for a React Flow Node in the Lattice graph.\n\n# Fields\n* `label` - The label displayed for the node.",
        "type": "object",
        "properties": {
          "label": {
            "description": "The label displayed for the node.",
            "type": "string"
          }
        },
        "required": [
          "label"
        ]
      },
      "LatticeReactFlowPos": {
        "type": "string",
        "enum": [
          "left",
          "top",
          "right",
          "bottom"
        ]
      },
      "LatticeRectFlowNodePosition": {
        "title": "LatticeRectFlowNodePosition",
        "description": "Represents the position of a React Flow Node in the Lattice graph.\n\n# Fields\n* `x` - The horizontal position (in pixels).\n* `y` - The vertical position (in pixels).",
        "type": "object",
        "properties": {
          "x": {
            "description": "The horizontal position (in pixels).",
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "description": "The vertical position (in pixels).",
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "x",
          "y"
        ]
      },
      "LatticeRegistryEdge": {
        "title": "LatticeRegistryEdge",
        "type": "object",
        "properties": {
          "source_node_id": {
            "type": "string",
            "format": "uuid"
          },
          "target_node_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "source_node_id",
          "target_node_id"
        ]
      },
      "LatticeRegistryItem": {
        "title": "LatticeRegistryItem",
        "type": "object",
        "properties": {
          "flow_registry_id": {
            "type": "string",
            "format": "uuid"
          },
          "identifier": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "lattice_type": {
            "$ref": "#/components/schemas/FlowType"
          },
          "output_schema": {
            "$ref": "#/components/schemas/SchemaInfo"
          },
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescribedInputField"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuarkTag"
            }
          },
          "hidden": {
            "type": "boolean"
          },
          "created_at": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LatticeRegistryNode"
            }
          },
          "edges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LatticeRegistryEdge"
            }
          }
        },
        "required": [
          "flow_registry_id",
          "identifier",
          "name",
          "version",
          "author",
          "lattice_type",
          "inputs",
          "tags",
          "hidden",
          "created_at",
          "nodes",
          "edges"
        ]
      },
      "LatticeRegistryNode": {
        "title": "LatticeRegistryNode",
        "type": "object",
        "properties": {
          "node_id": {
            "type": "string",
            "format": "uuid"
          },
          "quark_reg_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "constants": {
            "type": "object",
            "additionalProperties": {}
          },
          "lattice_to_quark_input_map": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": [
          "node_id",
          "quark_reg_id",
          "name",
          "constants",
          "lattice_to_quark_input_map"
        ]
      },
      "OpenAICompletionsInput": {
        "title": "OpenAICompletionsInput",
        "type": "object",
        "properties": {
          "lattice_id": {
            "type": "string",
            "format": "uuid"
          },
          "ipc_dataset_id": {
            "type": "string",
            "format": "uuid"
          },
          "api_key": {
            "writeOnly": true,
            "type": "string"
          },
          "opt_prompt_column": {
            "type": "string"
          },
          "opt_model_name": {
            "type": "string"
          },
          "opt_system_prompt": {
            "type": "string"
          },
          "opt_max_output_tokens": {
            "type": "integer",
            "format": "uint64"
          },
          "opt_json_output": {
            "type": "boolean"
          },
          "opt_explode_json": {
            "type": "boolean"
          }
        },
        "required": [
          "lattice_id",
          "ipc_dataset_id",
          "api_key"
        ]
      },
      "OpenAIEmbeddingsInput": {
        "title": "OpenAIEmbeddingsInput",
        "type": "object",
        "properties": {
          "ipc_dataset_id": {
            "type": "string",
            "format": "uuid"
          },
          "lattice_id": {
            "type": "string",
            "format": "uuid"
          },
          "api_key": {
            "type": "string"
          },
          "opt_model_name": {
            "type": "string"
          },
          "opt_num_embeddings": {
            "type": "integer",
            "format": "uint32"
          },
          "opt_text_column_name": {
            "type": "string"
          },
          "opt_text_additional_embed_columns": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "ipc_dataset_id",
          "lattice_id",
          "api_key"
        ]
      },
      "OpendalConfigInput": {
        "description": "OpenAPI compatible set of configs",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "S3": "#/components/schemas/OpendalConfigInput_OpendalS3Config",
            "Mem": "#/components/schemas/OpendalConfigInput_OpendalMemoryConfig",
            "GDrive": "#/components/schemas/OpendalConfigInput_OpendalGDriveConfig",
            "OneDrive": "#/components/schemas/OpendalConfigInput_OpendalOneDriveConfig"
          }
        },
        "type": "object",
        "anyOf": [
          {
            "$ref": "#/components/schemas/OpendalConfigInput_OpendalS3Config"
          },
          {
            "$ref": "#/components/schemas/OpendalConfigInput_OpendalMemoryConfig"
          },
          {
            "$ref": "#/components/schemas/OpendalConfigInput_OpendalGDriveConfig"
          },
          {
            "$ref": "#/components/schemas/OpendalConfigInput_OpendalOneDriveConfig"
          }
        ]
      },
      "OpendalConfigInput_OpendalGDriveConfig": {
        "description": "OpenAPI compatible set of configs",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "type": {
                "example": "GDrive",
                "type": "string",
                "enum": [
                  "GDrive"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "$ref": "#/components/schemas/OpendalGDriveConfig"
          }
        ]
      },
      "OpendalConfigInput_OpendalMemoryConfig": {
        "description": "OpenAPI compatible set of configs",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "type": {
                "example": "Mem",
                "type": "string",
                "enum": [
                  "Mem"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "$ref": "#/components/schemas/OpendalMemoryConfig"
          }
        ]
      },
      "OpendalConfigInput_OpendalOneDriveConfig": {
        "description": "OpenAPI compatible set of configs",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "type": {
                "example": "OneDrive",
                "type": "string",
                "enum": [
                  "OneDrive"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "$ref": "#/components/schemas/OpendalOneDriveConfig"
          }
        ]
      },
      "OpendalConfigInput_OpendalS3Config": {
        "description": "OpenAPI compatible set of configs",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "type": {
                "example": "S3",
                "type": "string",
                "enum": [
                  "S3"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "$ref": "#/components/schemas/OpendalS3Config"
          }
        ]
      },
      "OpendalGDriveConfig": {
        "title": "OpendalGDriveConfig",
        "type": "object",
        "properties": {
          "root": {
            "description": "The root for gdrive",
            "default": "/",
            "type": "string"
          },
          "access_token": {
            "description": "Access token for gdrive.",
            "type": "string"
          },
          "refresh_token": {
            "description": "Refresh token for gdrive.",
            "type": "string"
          },
          "client_id": {
            "description": "Client id for gdrive.",
            "type": "string"
          },
          "client_secret": {
            "description": "Client secret for gdrive.",
            "type": "string"
          }
        }
      },
      "OpendalMemoryConfig": {
        "title": "OpendalMemoryConfig",
        "description": "Config for memory.",
        "type": "object",
        "properties": {
          "root": {
            "description": "root of the backend.",
            "default": "/",
            "type": "string"
          }
        }
      },
      "OpendalOneDriveConfig": {
        "title": "OpendalOneDriveConfig",
        "type": "object",
        "properties": {
          "root": {
            "description": "The root path for the OneDrive service for the file access",
            "default": "/",
            "type": "string"
          },
          "access_token": {
            "description": "Microsoft Graph API (also OneDrive API) access token",
            "type": "string"
          },
          "refresh_token": {
            "description": "Microsoft Graph API (also OneDrive API) refresh token",
            "type": "string"
          },
          "client_id": {
            "description": "Microsoft Graph API Application (client) ID that is in the Azure's app registration portal",
            "type": "string"
          },
          "client_secret": {
            "description": "Microsoft Graph API Application client secret that is in the Azure's app registration portal",
            "type": "string"
          },
          "enable_versioning": {
            "description": "Enabling version support",
            "default": false,
            "type": "boolean"
          }
        }
      },
      "OpendalQuarkInput": {
        "title": "OpendalQuarkInput",
        "description": "Full Quark input implementation",
        "type": "object",
        "properties": {
          "flow_id": {
            "type": "string",
            "format": "uuid"
          },
          "source_id": {
            "type": "string",
            "format": "uuid"
          },
          "config": {
            "$ref": "#/components/schemas/OpendalConfigInput"
          },
          "opt_paths": {
            "description": "Filter read by paths (directories or files)",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "opt_recursive": {
            "type": "boolean"
          },
          "opt_set_status": {
            "$ref": "#/components/schemas/QuarkFileObjectStatus"
          }
        },
        "required": [
          "flow_id",
          "source_id",
          "config"
        ]
      },
      "OpendalS3Config": {
        "title": "OpendalS3Config",
        "type": "object",
        "properties": {
          "root": {
            "description": "# Root Path\nAll operations will happen under this root (relative",
            "default": "/",
            "type": "string"
          },
          "bucket": {
            "description": "bucket name of this backend.\n\nrequired.",
            "default": "",
            "type": "string"
          },
          "enable_versioning": {
            "description": "# Bucket versioning",
            "default": false,
            "type": "boolean"
          },
          "endpoint": {
            "description": "endpoint of this backend.\n\nEndpoint must be full uri, e.g.\n\n- AWS S3: `https://s3.amazonaws.com` or `https://s3.{region}.amazonaws.com`\n- Cloudflare R2: `https://<ACCOUNT_ID>.r2.cloudflarestorage.com`\n- Aliyun OSS: `https://{region}.aliyuncs.com`\n- Tencent COS: `https://cos.{region}.myqcloud.com`\n- Minio: `http://127.0.0.1:9000`\n\nIf user inputs endpoint without scheme like \"s3.amazonaws.com\", we\nwill prepend \"https://\" before it.\n\n- If endpoint is set, we will take user's input first.\n- If not, we will try to load it from environment.\n- If still not set, default to `https://s3.amazonaws.com`.",
            "default": "https://s3.amazonaws.com",
            "type": "string"
          },
          "region": {
            "description": "Region represent the signing region of this endpoint. This is required\nif you are using the default AWS S3 endpoint.\n\nIf using a custom endpoint,\n- If region is set, we will take user's input first.\n- If not, we will try to load it from environment.",
            "type": "string"
          },
          "access_key_id": {
            "description": "access_key_id of this backend.\n\n- If access_key_id is set, we will take user's input first.\n- If not, we will try to load it from environment.",
            "type": "string"
          },
          "secret_access_key": {
            "description": "secret_access_key of this backend.\n\n- If secret_access_key is set, we will take user's input first.\n- If not, we will try to load it from environment.",
            "type": "string"
          },
          "session_token": {
            "description": "session_token (aka, security token) of this backend.\n\nThis token will expire after sometime, it's recommended to set session_token\nby hand.",
            "type": "string"
          },
          "role_arn": {
            "description": "role_arn for this backend.\n\nIf `role_arn` is set, we will use already known config as source\ncredential to assume role with `role_arn`.",
            "type": "string"
          },
          "external_id": {
            "description": "external_id for this backend.",
            "type": "string"
          },
          "role_session_name": {
            "description": "role_session_name for this backend.",
            "type": "string"
          },
          "disable_config_load": {
            "description": "Disable config load so that opendal will not load config from\nenvironment.\n\nFor examples:\n\n- envs like `AWS_ACCESS_KEY_ID`\n- files like `~/.aws/config`",
            "default": true,
            "type": "boolean"
          },
          "disable_ec2_metadata": {
            "description": "Disable load credential from ec2 metadata.\n\nThis option is used to disable the default behavior of opendal\nto load credential from ec2 metadata, a.k.a, IMDSv2",
            "default": false,
            "type": "boolean"
          },
          "allow_anonymous": {
            "description": "Allow anonymous will allow opendal to send request without signing\nwhen credential is not loaded.",
            "default": false,
            "type": "boolean"
          },
          "server_side_encryption": {
            "description": "server_side_encryption for this backend.\n\nAvailable values: `AES256`, `aws:kms`.",
            "type": "string"
          },
          "server_side_encryption_aws_kms_key_id": {
            "description": "server_side_encryption_aws_kms_key_id for this backend\n\n- If `server_side_encryption` set to `aws:kms`, and `server_side_encryption_aws_kms_key_id`\nis not set, S3 will use aws managed kms key to encrypt data.\n- If `server_side_encryption` set to `aws:kms`, and `server_side_encryption_aws_kms_key_id`\nis a valid kms key id, S3 will use the provided kms key to encrypt data.\n- If the `server_side_encryption_aws_kms_key_id` is invalid or not found, an error will be\nreturned.\n- If `server_side_encryption` is not `aws:kms`, setting `server_side_encryption_aws_kms_key_id`\nis a noop.",
            "type": "string"
          },
          "server_side_encryption_customer_algorithm": {
            "description": "server_side_encryption_customer_algorithm for this backend.\n\nAvailable values: `AES256`.",
            "type": "string"
          },
          "server_side_encryption_customer_key": {
            "description": "server_side_encryption_customer_key for this backend.\n\nValue: BASE64-encoded key that matches algorithm specified in\n`server_side_encryption_customer_algorithm`.",
            "type": "string"
          },
          "server_side_encryption_customer_key_md5": {
            "description": "Set server_side_encryption_customer_key_md5 for this backend.\n\nValue: MD5 digest of key specified in `server_side_encryption_customer_key`.",
            "type": "string"
          },
          "default_storage_class": {
            "description": "default storage_class for this backend.\n\nAvailable values:\n- `DEEP_ARCHIVE`\n- `GLACIER`\n- `GLACIER_IR`\n- `INTELLIGENT_TIERING`\n- `ONEZONE_IA`\n- `EXPRESS_ONEZONE`\n- `OUTPOSTS`\n- `REDUCED_REDUNDANCY`\n- `STANDARD`\n- `STANDARD_IA`\n\nS3 compatible services don't support all of them",
            "type": "string"
          },
          "enable_virtual_host_style": {
            "description": "Enable virtual host style so that opendal will send API requests\nin virtual host style instead of path style.\n\n- By default, opendal will send API to `https://s3.us-east-1.amazonaws.com/bucket_name`\n- Enabled, opendal will send API to `https://bucket_name.s3.us-east-1.amazonaws.com`",
            "default": false,
            "type": "boolean"
          },
          "batch_max_operations": {
            "description": "Set maximum batch operations of this backend.\n\nSome compatible services have a limit on the number of operations in a batch request.\nFor example, R2 could return `Internal Error` while batch delete 1000 files.\n\nPlease tune this value based on services' document.",
            "type": "integer",
            "format": "uint64"
          },
          "delete_max_size": {
            "description": "Set the maximum delete size of this backend.\n\nSome compatible services have a limit on the number of operations in a batch request.\nFor example, R2 could return `Internal Error` while batch delete 1000 files.\n\nPlease tune this value based on services' document.",
            "type": "integer",
            "format": "uint64"
          },
          "disable_stat_with_override": {
            "description": "Disable stat with override so that opendal will not send stat request with override queries.\n\nFor example, R2 doesn't support stat with `response_content_type` query.",
            "default": false,
            "type": "boolean"
          },
          "checksum_algorithm": {
            "description": "Checksum Algorithm to use when sending checksums in HTTP headers.\nThis is necessary when writing to AWS S3 Buckets with Object Lock enabled for example.\n\nAvailable options:\n- \"crc32c\"",
            "type": "string"
          },
          "disable_write_with_if_match": {
            "description": "Disable write with if match so that opendal will not send write request with if match headers.\n\nFor example, Ceph RADOS S3 doesn't support write with if match.",
            "default": false,
            "type": "boolean"
          },
          "enable_write_with_append": {
            "description": "Enable write with append so that opendal will send write request with append headers.",
            "default": false,
            "type": "boolean"
          },
          "disable_list_objects_v2": {
            "description": "OpenDAL uses List Objects V2 by default to list objects.\nHowever, some legacy services do not yet support V2.\nThis option allows users to switch back to the older List Objects V1.",
            "default": false,
            "type": "boolean"
          },
          "enable_request_payer": {
            "description": "Indicates whether the client agrees to pay for the requests made to the S3 bucket.",
            "default": false,
            "type": "boolean"
          }
        },
        "required": [
          "bucket"
        ]
      },
      "PythonEnvInfo": {
        "title": "PythonEnvInfo",
        "description": "Information about the pyo3 Python GIL environment\n\nCreates a new GIL instance for this action, so not tied to any Action state",
        "type": "object",
        "properties": {
          "version": {
            "description": "Python version",
            "type": "string"
          },
          "prefix": {
            "description": "Python path prefix",
            "type": "string"
          },
          "exec_prefix": {
            "description": "Python exec prefix",
            "type": "string"
          },
          "site": {
            "description": "Python site",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "path": {
            "description": "Python path",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "modules": {
            "description": "Available modules",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "version",
          "prefix",
          "exec_prefix",
          "site",
          "path",
          "modules"
        ]
      },
      "QADemoInput": {
        "title": "QADemoInput",
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          },
          "table_name": {
            "type": "string"
          },
          "openai_api_key": {
            "type": "string"
          },
          "search_limit": {
            "type": "integer",
            "format": "uint64"
          },
          "roles": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "query",
          "table_name",
          "openai_api_key",
          "roles"
        ]
      },
      "QuarkCategory": {
        "type": "string",
        "enum": [
          "AI",
          "Api",
          "Database",
          "Extractor",
          "Files",
          "Transformer",
          "Vector",
          "Other"
        ]
      },
      "QuarkFileObject": {
        "title": "QuarkFileObject",
        "type": "object",
        "properties": {
          "file_id": {
            "type": "string",
            "format": "uuid"
          },
          "source_id": {
            "type": "string",
            "format": "uuid"
          },
          "origin_quark": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "$ref": "#/components/schemas/QuarkFileObjectStatus"
          },
          "path": {
            "type": "string"
          },
          "content_length": {
            "type": "integer",
            "format": "uint64"
          },
          "file_name": {
            "type": "string"
          },
          "date_added": {
            "type": "string",
            "format": "date-time"
          },
          "last_scanned": {
            "type": "string",
            "format": "date-time"
          },
          "source_last_modified": {
            "type": "string",
            "format": "date-time"
          },
          "e_tag": {
            "description": "The unique identifier for the object\n<https://datatracker.ietf.org/doc/html/rfc9110#name-etag>",
            "type": "string"
          },
          "source_version": {
            "description": "A version indicator for this object",
            "type": "string"
          },
          "source_is_current": {
            "type": "boolean"
          },
          "deleted_at_source": {
            "type": "boolean"
          },
          "content_type": {
            "type": "string"
          },
          "content_range": {
            "type": "string"
          },
          "content_encoding": {
            "type": "string"
          },
          "cache_control": {
            "type": "string"
          },
          "content_disposition": {
            "type": "string"
          },
          "extra": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "binary": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "uint8"
            }
          },
          "markdown": {
            "type": "string"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "file_id",
          "source_id",
          "origin_quark",
          "status",
          "path",
          "file_name",
          "date_added",
          "last_scanned",
          "extra"
        ]
      },
      "QuarkFileObjectStatus": {
        "type": "string",
        "enum": [
          "New",
          "Processing",
          "Processed",
          "Failed",
          "Deleted"
        ]
      },
      "QuarkNodeType": {
        "type": "string",
        "enum": [
          "Input",
          "Output",
          "InputOutput"
        ]
      },
      "QuarkRegistryItem": {
        "title": "QuarkRegistryItem",
        "type": "object",
        "properties": {
          "quark_registry_id": {
            "type": "string",
            "format": "uuid"
          },
          "qrn": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "node_type": {
            "$ref": "#/components/schemas/QuarkNodeType"
          },
          "category": {
            "$ref": "#/components/schemas/QuarkCategory"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuarkTag"
            }
          },
          "output_schema": {
            "$ref": "#/components/schemas/SchemaInfo"
          },
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DescribedInputField"
            }
          },
          "hidden": {
            "type": "boolean"
          },
          "created_at": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "readOnly": true,
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "quark_registry_id",
          "qrn",
          "name",
          "version",
          "author",
          "node_type",
          "category",
          "tags",
          "hidden",
          "created_at"
        ]
      },
      "QuarkTag": {
        "type": "string",
        "enum": [
          "AI",
          "Base",
          "Completion",
          "Destination",
          "Embeddings",
          "Files",
          "Etl",
          "Llm",
          "MultiModal",
          "Quark",
          "Source",
          "Structured",
          "Text"
        ]
      },
      "RegistryAPI": {
        "title": "RegistryAPI",
        "description": "A different format of the registry that's more friendly to the REST API and to React/TS.\n\n# Fields\n* `root_url` - The base URL of the API.\n* `quarks_suffix` - The suffix used for Quark-related API endpoints.\n* `lattices_suffix` - The suffix used for Lattice-related API endpoints.\n* `quarks` - A list of all Quarks in the registry.\n* `lattices` - A list of all Lattices in the registry.",
        "type": "object",
        "properties": {
          "root_url": {
            "description": "The base URL of the API.",
            "type": "string"
          },
          "quarks_suffix": {
            "description": "The suffix used for Quark-related API endpoints.",
            "type": "string"
          },
          "lattices_suffix": {
            "description": "The suffix used for Lattice-related API endpoints.",
            "type": "string"
          },
          "quarks": {
            "description": "A list of all Quarks in the registry.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuarkRegistryItem"
            }
          },
          "lattices": {
            "description": "A list of all Lattices in the registry.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LatticeRegistryItem"
            }
          }
        },
        "required": [
          "root_url",
          "quarks_suffix",
          "lattices_suffix",
          "quarks",
          "lattices"
        ]
      },
      "S3ObjectStoreConfig": {
        "title": "S3ObjectStoreConfig",
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "endpoint": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "access_key_id": {
            "type": "string"
          },
          "secret_access_key": {
            "type": "string"
          }
        },
        "required": [
          "url",
          "endpoint",
          "region",
          "access_key_id",
          "secret_access_key"
        ]
      },
      "S3ReadCSVQuarkInput": {
        "title": "S3ReadCSVQuarkInput",
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "access_key_id": {
            "type": "string"
          },
          "access_key_secret": {
            "type": "string"
          },
          "lattice_id": {
            "type": "string",
            "format": "uuid"
          },
          "opt_bucket": {
            "type": "string"
          },
          "opt_endpoint": {
            "type": "string"
          },
          "opt_enable_http": {
            "type": "boolean"
          },
          "opt_region": {
            "type": "string"
          }
        },
        "required": [
          "url",
          "access_key_id",
          "access_key_secret",
          "lattice_id"
        ]
      },
      "S3ReadWholeFileQuarkInput": {
        "title": "S3ReadWholeFileQuarkInput",
        "description": "A Lattice/Branch-starting Quark that reads entire files from an S3 bucket\n(or single path) and writes it to the output of the raw bytes as Arrow via\nthe IPC Service for consumption downstream",
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "access_key_id": {
            "type": "string"
          },
          "access_key_secret": {
            "type": "string"
          },
          "lattice_id": {
            "type": "string",
            "format": "uuid"
          },
          "opt_bucket": {
            "type": "string"
          },
          "opt_endpoint": {
            "type": "string"
          },
          "opt_enable_http": {
            "type": "boolean"
          },
          "opt_region": {
            "type": "string"
          }
        },
        "required": [
          "url",
          "access_key_id",
          "access_key_secret",
          "lattice_id"
        ]
      },
      "SaTSegmentationInput": {
        "title": "SaTSegmentationInput",
        "type": "object",
        "properties": {
          "flow_id": {
            "type": "string",
            "format": "uuid"
          },
          "ipc_dataset_id": {
            "type": "string",
            "format": "uuid"
          },
          "opt_input_column": {
            "type": "string"
          },
          "opt_sentence_threshold": {
            "description": "Threshold for sentence boundary detection (default: 0.25)",
            "type": "number",
            "format": "float"
          },
          "opt_paragraph_threshold": {
            "description": "Threshold for paragraph boundary detection (default: 0.5)",
            "type": "number",
            "format": "float"
          },
          "opt_segmentation_mode": {
            "description": "Segmentation mode: SentencesOnly, ParagraphsOnly, or SentencesAndParagraphs",
            "allOf": [
              {
                "$ref": "#/components/schemas/SegmentationMode"
              },
              {
                "description": "Segmentation mode: SentencesOnly, ParagraphsOnly, or SentencesAndParagraphs"
              }
            ]
          }
        },
        "required": [
          "flow_id",
          "ipc_dataset_id"
        ]
      },
      "SchemaInfo": {
        "title": "SchemaInfo",
        "description": "API-Friendly representation of a [Schema]",
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldInfo"
            }
          },
          "extra_fields_allowed": {
            "type": "boolean"
          }
        },
        "required": [
          "fields",
          "extra_fields_allowed"
        ]
      },
      "SegmentationMode": {
        "type": "string",
        "enum": [
          "SentencesOnly",
          "ParagraphsOnly",
          "SentencesAndParagraphs"
        ]
      },
      "SimpleInputEmbeddingSearch": {
        "title": "SimpleInputEmbeddingSearch",
        "type": "object",
        "properties": {
          "criteria": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            }
          },
          "limit": {
            "type": "integer",
            "format": "uint64"
          }
        },
        "required": [
          "criteria"
        ]
      },
      "SimpleInputPlainText": {
        "title": "SimpleInputPlainText",
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          }
        },
        "required": [
          "text"
        ]
      },
      "SimpleInputTextSearch": {
        "title": "SimpleInputTextSearch",
        "description": "Dedicated structs for the input enum variants in order to support Poem OpenAPI",
        "type": "object",
        "properties": {
          "criteria": {
            "type": "string"
          },
          "limit": {
            "type": "integer",
            "format": "uint64"
          }
        },
        "required": [
          "criteria"
        ]
      },
      "SimpleInputValue": {
        "description": "Represents the simple input a Quark/Lattice - usually used for inference\n\nTODO: Replace this with [Issue 23](https://github.com/ProjectBifrost/bifrost/issues/23)",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "TextSearch": "#/components/schemas/SimpleInputValue_SimpleInputTextSearch",
            "EmbeddingSearch": "#/components/schemas/SimpleInputValue_SimpleInputEmbeddingSearch",
            "PlainText": "#/components/schemas/SimpleInputValue_SimpleInputPlainText"
          }
        },
        "type": "object",
        "anyOf": [
          {
            "$ref": "#/components/schemas/SimpleInputValue_SimpleInputTextSearch"
          },
          {
            "$ref": "#/components/schemas/SimpleInputValue_SimpleInputEmbeddingSearch"
          },
          {
            "$ref": "#/components/schemas/SimpleInputValue_SimpleInputPlainText"
          }
        ]
      },
      "SimpleInputValue_SimpleInputEmbeddingSearch": {
        "description": "Represents the simple input a Quark/Lattice - usually used for inference\n\nTODO: Replace this with [Issue 23](https://github.com/ProjectBifrost/bifrost/issues/23)",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "type": {
                "example": "EmbeddingSearch",
                "type": "string",
                "enum": [
                  "EmbeddingSearch"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "$ref": "#/components/schemas/SimpleInputEmbeddingSearch"
          }
        ]
      },
      "SimpleInputValue_SimpleInputPlainText": {
        "description": "Represents the simple input a Quark/Lattice - usually used for inference\n\nTODO: Replace this with [Issue 23](https://github.com/ProjectBifrost/bifrost/issues/23)",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "type": {
                "example": "PlainText",
                "type": "string",
                "enum": [
                  "PlainText"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "$ref": "#/components/schemas/SimpleInputPlainText"
          }
        ]
      },
      "SimpleInputValue_SimpleInputTextSearch": {
        "description": "Represents the simple input a Quark/Lattice - usually used for inference\n\nTODO: Replace this with [Issue 23](https://github.com/ProjectBifrost/bifrost/issues/23)",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "type": {
                "example": "TextSearch",
                "type": "string",
                "enum": [
                  "TextSearch"
                ]
              }
            },
            "required": [
              "type"
            ]
          },
          {
            "$ref": "#/components/schemas/SimpleInputTextSearch"
          }
        ]
      },
      "SnowflakeAuth": {
        "type": "object",
        "anyOf": [
          {
            "$ref": "#/components/schemas/SnowflakeConnectorAuthBasic"
          }
        ]
      },
      "SnowflakeConnectorAuthBasic": {
        "title": "SnowflakeConnectorAuthBasic",
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "SnowflakeSQLReadQuarkInput": {
        "title": "SnowflakeSQLReadQuarkInput",
        "type": "object",
        "properties": {
          "lattice_id": {
            "type": "string",
            "format": "uuid"
          },
          "auth": {
            "writeOnly": true,
            "description": "Authentication Details",
            "allOf": [
              {
                "$ref": "#/components/schemas/SnowflakeAuth"
              },
              {
                "writeOnly": true,
                "description": "Authentication Details"
              }
            ]
          },
          "account": {
            "description": "Snowflake Account ID",
            "type": "string"
          },
          "opt_warehouse": {
            "description": "Snowflake Warehouse",
            "type": "string"
          },
          "opt_database": {
            "description": "Snowflake Database",
            "type": "string"
          },
          "opt_schema": {
            "description": "Snowflake Schema",
            "type": "string"
          },
          "opt_role": {
            "description": "Executing Role",
            "type": "string"
          },
          "query": {
            "type": "string"
          }
        },
        "required": [
          "lattice_id",
          "auth",
          "account",
          "query"
        ]
      },
      "TokioStats": {
        "title": "TokioStats",
        "type": "object",
        "properties": {
          "workers": {
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokioWorkerStats"
            }
          },
          "budget_forced_yield_count": {
            "readOnly": true,
            "description": "Returns the number of times that tasks have been forced to yield back to the scheduler after\nexhausting their task budgets.\n\nThis count starts at zero when the runtime is created and increases by one each time a task\nyields due to exhausting its budget.\n\nThe counter is monotonically increasing. It is never decremented or reset to zero.",
            "type": "integer",
            "format": "uint64"
          },
          "global_queue_depth": {
            "readOnly": true,
            "description": "Returns the number of tasks currently scheduled in the runtime’s global queue.\n\nTasks that are spawned or notified from a non-runtime thread are scheduled using the\nruntime’s global queue. This metric returns the current number of tasks pending in the\nglobal queue. As such, the returned value may increase or decrease as new tasks are\nscheduled and processed.",
            "type": "integer",
            "format": "uint64"
          },
          "io_driver_fd_deregistered_count": {
            "readOnly": true,
            "description": "Returns the number of file descriptors that have been deregistered by the runtime’s I/O\ndriver.",
            "type": "integer",
            "format": "uint64"
          },
          "io_driver_fd_registered_count": {
            "readOnly": true,
            "description": "Returns the number of file descriptors that have been registered with the runtime’s I/O\ndriver.",
            "type": "integer",
            "format": "uint64"
          },
          "io_driver_ready_count": {
            "readOnly": true,
            "description": "Returns the number of ready events processed by the runtime’s I/O driver.",
            "type": "integer",
            "format": "uint64"
          },
          "num_alive_tasks": {
            "readOnly": true,
            "description": "Returns the current number of alive tasks in the runtime.\n\nThis counter increases when a task is spawned and decreases when a task exits.",
            "type": "integer",
            "format": "uint64"
          },
          "num_workers": {
            "readOnly": true,
            "description": "Returns the number of worker threads used by the runtime.\n\nThe number of workers is set by configuring worker_threads on runtime::Builder. When using\nthe current_thread runtime, the return value is always 1.",
            "type": "integer",
            "format": "uint64"
          },
          "remote_schedule_count": {
            "readOnly": true,
            "description": "Returns the number of tasks scheduled from outside of the runtime.\n\nThe remote schedule count starts at zero when the runtime is created and increases by one\neach time a task is woken from outside of the runtime. This usually means that a task is\nspawned or notified from a non-runtime thread and must be queued using the Runtime’s\ninjection queue, which tends to be slower.\n\nThe counter is monotonically increasing. It is never decremented or reset to zero.",
            "type": "integer",
            "format": "uint64"
          },
          "spawned_tasks_count": {
            "readOnly": true,
            "description": "Returns the number of tasks spawned in this runtime since it was created.\n\nThis count starts at zero when the runtime is created and increases by one each time a task\nis spawned.\n\nThe counter is monotonically increasing. It is never decremented or reset to zero.",
            "type": "integer",
            "format": "uint64"
          },
          "num_blocking_threads": {
            "readOnly": true,
            "description": "Returns the number of additional threads spawned by the runtime.\n\nThe number of workers is set by configuring max_blocking_threads on runtime::Builder.",
            "type": "integer",
            "format": "uint64"
          },
          "dump": {
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "workers",
          "budget_forced_yield_count",
          "global_queue_depth",
          "io_driver_fd_deregistered_count",
          "io_driver_fd_registered_count",
          "io_driver_ready_count",
          "num_alive_tasks",
          "num_workers",
          "remote_schedule_count",
          "spawned_tasks_count",
          "num_blocking_threads",
          "dump"
        ]
      },
      "TokioWorkerStats": {
        "title": "TokioWorkerStats",
        "type": "object",
        "properties": {
          "worker_id": {
            "readOnly": true,
            "type": "integer",
            "format": "uint64"
          },
          "worker_local_schedule_count": {
            "readOnly": true,
            "description": "Returns the number of tasks scheduled from within the runtime on the given worker’s local\nqueue.\n\nThe local schedule count starts at zero when the runtime is created and increases by one\neach time a task is woken from inside of the runtime on the given worker. This usually means\nthat a task is spawned or notified from within a runtime thread and will be queued on the\nworker-local queue.\n\nThe counter is monotonically increasing. It is never decremented or reset to zero.",
            "type": "integer",
            "format": "uint64"
          },
          "worker_noop_count": {
            "readOnly": true,
            "description": "Returns the number of times the given worker thread unparked but performed no work before\nparking again.\n\nThe worker no-op count starts at zero when the runtime is created and increases by one each\ntime the worker unparks the thread but finds no new work and goes back to sleep. This\nindicates a false-positive wake up.\n\nThe counter is monotonically increasing. It is never decremented or reset to zero.",
            "type": "integer",
            "format": "uint64"
          },
          "worker_overflow_count": {
            "readOnly": true,
            "description": "Returns the number of times the given worker thread saturated its local queue.\n\nThis metric only applies to the multi-threaded scheduler.\n\nThe worker overflow count starts at zero when the runtime is created and increases by one\neach time the worker attempts to schedule a task locally, but its local queue is full. When\nthis happens, half of the local queue is moved to the injection queue.\n\nThe counter is monotonically increasing. It is never decremented or reset to zero.",
            "type": "integer",
            "format": "uint64"
          },
          "worker_park_count": {
            "readOnly": true,
            "description": "Returns the total number of times the given worker thread has parked.\n\nThe worker park count starts at zero when the runtime is created and increases by one each\ntime the worker parks the thread waiting for new inbound events to process. This usually\nmeans the worker has processed all pending work and is currently idle.\n\nThe counter is monotonically increasing. It is never decremented or reset to zero.",
            "type": "integer",
            "format": "uint64"
          },
          "worker_park_unpark_count": {
            "readOnly": true,
            "description": "Returns the total number of times the given worker thread has parked and unparked.\n\nThe worker park/unpark count starts at zero when the runtime is created and increases by one\neach time the worker parks the thread waiting for new inbound events to process. This\nusually means the worker has processed all pending work and is currently idle. When new work\nbecomes available, the worker is unparked and the park/unpark count is again increased by\none.\n\nAn odd count means that the worker is currently parked. An even count means that the worker\nis currently active.\n\nThe counter is monotonically increasing. It is never decremented or reset to zero.",
            "type": "integer",
            "format": "uint64"
          },
          "worker_poll_count": {
            "readOnly": true,
            "description": "Returns the number of tasks the given worker thread has polled.\n\nThe worker poll count starts at zero when the runtime is created and increases by one each\ntime the worker polls a scheduled task.\n\nThe counter is monotonically increasing. It is never decremented or reset to zero.",
            "type": "integer",
            "format": "uint64"
          },
          "worker_steal_count": {
            "readOnly": true,
            "description": "Returns the number of tasks the given worker thread stole from another worker thread.\n\nThis metric only applies to the multi-threaded runtime and will always return 0 when using\nthe current thread runtime.\n\nThe worker steal count starts at zero when the runtime is created and increases by N each\ntime the worker has processed its scheduled queue and successfully steals N more pending\ntasks from another worker.\n\nThe counter is monotonically increasing. It is never decremented or reset to zero.",
            "type": "integer",
            "format": "uint64"
          },
          "worker_steal_operations": {
            "readOnly": true,
            "description": "Returns the number of times the given worker thread stole tasks from another worker thread.\n\nThis metric only applies to the multi-threaded runtime and will always return 0 when using\nthe current thread runtime.\n\nThe worker steal count starts at zero when the runtime is created and increases by one each\ntime the worker has processed its scheduled queue and successfully steals more pending tasks\nfrom another worker.\n\nThe counter is monotonically increasing. It is never decremented or reset to zero.",
            "type": "integer",
            "format": "uint64"
          }
        },
        "required": [
          "worker_id",
          "worker_local_schedule_count",
          "worker_noop_count",
          "worker_overflow_count",
          "worker_park_count",
          "worker_park_unpark_count",
          "worker_poll_count",
          "worker_steal_count",
          "worker_steal_operations"
        ]
      },
      "WorkerInfo": {
        "title": "WorkerInfo",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "$ref": "#/components/schemas/WorkerSlotStatus"
          },
          "version": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "management_port": {
            "type": "integer",
            "format": "uint16"
          },
          "data_port": {
            "type": "integer",
            "format": "uint16"
          },
          "tls": {
            "type": "boolean"
          },
          "error_message": {
            "type": "string"
          },
          "joined_at": {
            "type": "string",
            "format": "naive-date-time"
          },
          "last_seen_at": {
            "type": "string",
            "format": "naive-date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "naive-date-time"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkerTaskInfo"
            }
          },
          "num_task_workers": {
            "type": "integer",
            "format": "uint64"
          }
        },
        "required": [
          "id",
          "status",
          "version",
          "host",
          "management_port",
          "data_port",
          "tls",
          "joined_at",
          "last_seen_at",
          "updated_at",
          "tasks",
          "num_task_workers"
        ]
      },
      "WorkerSlotStatus": {
        "description": "Server statuses for workers and slots\n- [WorkerSlotStatus::New] Created but uninitialized\n- [WorkerSlotStatus::Available] Ready to accept work\n- [WorkerSlotStatus::Busy] Currently performing work, and not currently available for additional work\n- [WorkerSlotStatus::Error] In an error state and not available for work",
        "type": "string",
        "enum": [
          "New",
          "Available",
          "Busy",
          "Error"
        ]
      },
      "WorkerTaskInfo": {
        "title": "WorkerTaskInfo",
        "type": "object",
        "properties": {
          "task_type": {
            "type": "string"
          },
          "task_type_id": {
            "type": "string"
          },
          "task_id": {
            "type": "string",
            "format": "uuid"
          },
          "task_name": {
            "type": "string"
          },
          "parent_task_id": {
            "type": "string",
            "format": "uuid"
          },
          "is_finished": {
            "type": "boolean"
          }
        },
        "required": [
          "task_type",
          "task_type_id",
          "task_id",
          "is_finished"
        ]
      },
      "DataSetInfo": {
        "title": "DataSetInfo",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "schema": {
            "$ref": "#/components/schemas/SchemaInfo"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "completed_at": {
            "type": "string",
            "format": "date-time"
          },
          "source_quark_id": {
            "type": "string",
            "format": "uuid"
          },
          "consumer_quarks": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "batches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecordBatchInfo"
            }
          },
          "records": {
            "type": "integer",
            "format": "int64"
          },
          "bytes": {
            "type": "integer",
            "format": "int64"
          },
          "ordered": {
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/DatasetStatus"
          },
          "status_error_message": {
            "type": "string"
          },
          "destroyed_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "schema",
          "created_at",
          "batches",
          "records",
          "bytes",
          "ordered",
          "status"
        ]
      },
      "DatasetStatus": {
        "description": "Represents the status/stage of a Quark instance\nThe status of a dataset\n- [DatasetStatus::New] Created but unpopulated\n- [DatasetStatus::Empty] Created but no records\n- [DatasetStatus::Available] Ready to be consumed\n- [DatasetStatus::Sending] Currently being sent to worker\n- [DatasetStatus::Busy] Currently being consumed or populated\n- [DatasetStatus::Consumed] Consumed and no longer available\n- [DatasetStatus::Error] In an error state and not available",
        "type": "string",
        "enum": [
          "New",
          "Empty",
          "Pending",
          "Sending",
          "Received",
          "Available",
          "Consumed",
          "SenderError",
          "ReceiverError",
          "GeneralError"
        ]
      },
      "RecordBatchInfo": {
        "title": "RecordBatchInfo",
        "description": "API-Friendly representation of a [IPCRecordBatch]",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "sent_completed_at": {
            "type": "string",
            "format": "date-time"
          },
          "bytes": {
            "type": "integer",
            "format": "int64"
          },
          "records": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string"
          },
          "status_error_message": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "created_at",
          "bytes",
          "records",
          "status"
        ]
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "CookieAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Cookie"
      }
    }
  },
  "tags": [
    {
      "name": "Context"
    },
    {
      "name": "Identity"
    },
    {
      "name": "JsonSchema"
    },
    {
      "name": "MLModels"
    },
    {
      "name": "Profile"
    },
    {
      "name": "Root"
    },
    {
      "name": "Router"
    },
    {
      "name": "Sources"
    },
    {
      "name": "Agents"
    },
    {
      "name": "Datasets"
    },
    {
      "name": "History"
    },
    {
      "name": "Registry"
    },
    {
      "name": "WorkerManagement"
    }
  ]
}